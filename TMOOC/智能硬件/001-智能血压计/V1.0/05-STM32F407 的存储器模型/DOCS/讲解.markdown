# STM32F407 的存储器模型 #

## STM32F407 的存储器模型 ##

- 存储器组织结构
- 启动配置与存储器映射
- 位带区

学习嵌入式系统开发的初期，经常会有这样的疑问：微处理器运行时从哪里取得的指令，写好程序后应该放到哪里？变量在哪个区域？了解微处理器的存储器模型，有助于找到这些问题的答案。

嵌入式系统中的微处理器一般采用线性的空间管理方式，也就是内存，设备寄存器等统一编址在一个空间，了解微处理器的存储器模型有助于我们弄清楚其存储空间划分，我们就可以知道什么设备在什么地址空间、也就可以弄清楚，需要把代码、变量等分配到哪个空间范围。

关于STM32F407微处理器的存储器模型主要介绍一下结构方面的内容：

- 存储器组织结构
	+ ARM Cortex-M4的存储空间划分
	+ STM32F407的存储器空间划分
- STM32F407的启动配置和启动时存储器映射
- 位带区
	+ ARM Cotex-M4不像8051那样有位变量，但是其为能以原子操作完成对寄存器、变量的某个位的修改，引入了新的解决方案：“位带区”。

### 存储器组织结构 ###

#### ARM Cortex-M4的存储空间划分 ####
程序存储器、数据存储器、寄存器和 I/O 端口排列在同一个顺序的 4 GB 地址空间内。

采用小端格式


#### STM32F407 存储空间划分 ####

### 启动配置与存储器映射 ###
#### STM32F407 自举配置&存储器映射 ###
#### STM32F407 存储器重映射 ####
#### ELink407 开发板启动模式配置 ####



### 位带区 ###


